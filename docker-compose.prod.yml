services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      target: production
    container_name: retro_app_php_prod
    working_dir: /var/www/html
    volumes:
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
      - ./docker/php/php-prod.ini:/usr/local/etc/php/conf.d/99-prod.ini
      - app_prod_data:/var/www/html/var
    environment:
      - APP_ENV=prod
      - APP_DEBUG=false
      - MERCURE_URL=http://mercure/.well-known/mercure
      - MERCURE_PUBLIC_URL=https://your-domain.com/.well-known/mercure
      - MERCURE_JWT_SECRET=${MERCURE_JWT_SECRET}
      - DATABASE_URL=mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@mariadb:3306/retro_app?serverVersion=10.11&charset=utf8mb4
    depends_on:
      - mariadb
      - redis
    networks:
      - retro_network
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: retro_app_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx-prod.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - app_prod_data:/var/www/html/var
    depends_on:
      - app
    networks:
      - retro_network
    restart: unless-stopped

  mariadb:
    image: mariadb:10.11
    container_name: retro_app_mariadb_prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: retro_app
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mariadb_prod_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./docker/mysql/mariadb-prod.cnf:/etc/mysql/conf.d/mariadb-prod.cnf
    networks:
      - retro_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: retro_app_redis_prod
    volumes:
      - redis_prod_data:/data
      - ./docker/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: redis-server /usr/local/etc/redis/redis.conf
    networks:
      - retro_network
    restart: unless-stopped

  # Mercure for real-time updates
  mercure:
    image: dunglas/mercure
    container_name: retro_app_mercure_prod
    command: ["caddy", "run", "--config", "/etc/caddy/Caddyfile"]
    environment:
      - MERCURE_PUBLISHER_JWT_KEY=${MERCURE_JWT_SECRET}
      - MERCURE_SUBSCRIBER_JWT_KEY=${MERCURE_JWT_SECRET}
      - SERVER_NAME=:80
    ports:
      - "3000:80"
    networks:
      - retro_network
    restart: unless-stopped

  # Production monitoring
  prometheus:
    image: prom/prometheus
    container_name: retro_app_prometheus_prod
    ports:
      - "9090:9090"
    volumes:
      - ./docker/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - retro_network
    restart: unless-stopped

volumes:
  mariadb_prod_data:
  redis_prod_data:
  app_prod_data:
  prometheus_data:

networks:
  retro_network:
    driver: bridge
