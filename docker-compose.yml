# Base configuration for Retro App
# Use docker-compose.dev.yml for development
# Use docker-compose.prod.yml for production

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: retro_app_php
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
      - ./docker/php/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - mysql
    networks:
      - retro_network

  nginx:
    image: nginx:alpine
    container_name: retro_app_nginx
    ports:
      - "8080:80"
    volumes:
      - .:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - retro_network

  mysql:
    image: mysql:8.0
    container_name: retro_app_mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: retro_app
      MYSQL_USER: retro_user
      MYSQL_PASSWORD: retro_password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - retro_network

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: retro_app_phpmyadmin
    environment:
      PMA_HOST: mysql
      PMA_USER: retro_user
      PMA_PASSWORD: retro_password
    ports:
      - "8081:80"
    depends_on:
      - mysql
    networks:
      - retro_network

###> symfony/mercure-bundle ###
  mercure:
    image: dunglas/mercure
    restart: unless-stopped
    environment:
      # Uncomment the following line to disable HTTPS,
      #SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      MERCURE_SUBSCRIBER_JWT_KEY: '!ChangeThisMercureHubJWTSecretKey!'
      # Set the URL of your Symfony project (without trailing slash!) as value of the cors_origins directive
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins http://127.0.0.1:8000
    # Comment the following line to disable the development mode
    command: /usr/bin/caddy run --config /etc/caddy/dev.Caddyfile
    healthcheck:
      test: ["CMD", "curl", "-f", "https://localhost/healthz"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - mercure_data:/data
      - mercure_config:/config
###< symfony/mercure-bundle ###

volumes:

###> symfony/mercure-bundle ###
  mercure_data:
  mercure_config:
###< symfony/mercure-bundle ###
  mysql_data:

networks:
  retro_network:
    driver: bridge