{% extends 'admin/base.html.twig' %}

{% block title %}Users - RetroApp{% endblock %}

{% block body %}
<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">Users</h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a href="{{ path('admin_users_add') }}" class="btn btn-sm btn-primary">
                <i class="fas fa-plus me-1"></i>Add User
            </a>
        </div>
    </div>
</div>

<!-- Users Table -->
<div class="card shadow">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-primary">All Users</h6>
        <span class="badge badge-info">{{ total_users }} total users</span>
    </div>
    <div class="card-body">
        <div class="table-responsive">
            <table class="table table-bordered" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Name</th>
                        <th>Email</th>
                        <th>Roles</th>
                        <th>Status</th>
                        <th>Verified</th>
                        <th>Created</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {% for user in users %}
                    <tr>
                        <td>{{ user.id }}</td>
                        <td>{{ user.firstName }} {{ user.lastName }}</td>
                        <td>{{ user.email }}</td>
                        <td>
                            {% for role in user.roles %}
                                <span class="badge badge-secondary me-1">{{ role }}</span>
                            {% endfor %}
                        </td>
                        <td>
                            {% if user.isActive %}
                                <span class="badge badge-success">Active</span>
                            {% else %}
                                <span class="badge badge-danger">Inactive</span>
                            {% endif %}
                        </td>
                        <td>
                            {% if user.isVerified %}
                                <span class="badge badge-success">Verified</span>
                            {% else %}
                                <span class="badge badge-warning">Unverified</span>
                            {% endif %}
                        </td>
                        <td>{{ user.createdAt|date('M d, Y H:i') }}</td>
                        <td>
                            <div class="btn-group" role="group">
                                <a href="{{ path('admin_users_edit', {'id': user.id}) }}" class="btn btn-sm btn-outline-primary" title="Edit">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <button type="button" class="btn btn-sm btn-outline-danger delete-user-btn" 
                                        title="Delete" 
                                        data-user-id="{{ user.id }}" 
                                        data-user-name="{{ user.firstName }} {{ user.lastName }}">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                    {% else %}
                    <tr>
                        <td colspan="8" class="text-center text-muted">No users found</td>
                    </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
        
        <!-- Pagination -->
        {% if total_pages > 1 %}
        <div class="d-flex justify-content-between align-items-center mt-3">
            <div>
                <small class="text-muted">
                    Showing {{ ((current_page - 1) * limit) + 1 }} to {{ min(current_page * limit, total_users) }} of {{ total_users }} users
                </small>
            </div>
            <nav>
                <ul class="pagination pagination-sm mb-0">
                    {% if has_prev_page %}
                        <li class="page-item">
                            <a class="page-link" href="{{ path('admin_users', {'page': current_page - 1}) }}">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        </li>
                    {% endif %}
                    
                    {% for page_num in range(max(1, current_page - 2), min(total_pages, current_page + 2)) %}
                        <li class="page-item {% if page_num == current_page %}active{% endif %}">
                            <a class="page-link" href="{{ path('admin_users', {'page': page_num}) }}">{{ page_num }}</a>
                        </li>
                    {% endfor %}
                    
                    {% if has_next_page %}
                        <li class="page-item">
                            <a class="page-link" href="{{ path('admin_users', {'page': current_page + 1}) }}">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        </li>
                    {% endif %}
                </ul>
            </nav>
        </div>
        {% endif %}
    </div>
</div>

<style>
.shadow {
    box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15) !important;
}

.card {
    border: 1px solid #e3e6f0;
    border-radius: 0.35rem;
}

.table th {
    border-top: none;
    font-weight: 600;
    color: #5a5c69;
    background-color: #f8f9fc;
}

.badge-success {
    background-color: #1cc88a;
    color: white;
}

.badge-danger {
    background-color: #e74a3b;
    color: white;
}

.badge-warning {
    background-color: #f6c23e;
    color: #212529;
}

.badge-info {
    background-color: #36b9cc;
    color: white;
}

.badge-secondary {
    background-color: #858796;
    color: white;
}

.btn-group .btn {
    margin-right: 2px;
}

.btn-group .btn:last-child {
    margin-right: 0;
}

/* Confirmation Modal Styles */
.confirm-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.5);
    z-index: 10000;
    animation: fadeIn 0.2s ease-out;
}

.confirm-modal.active {
    display: flex;
    justify-content: center;
    align-items: center;
}

.confirm-modal-content {
    background: white;
    border-radius: 12px;
    padding: 2rem;
    max-width: 400px;
    width: 90%;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.2);
    animation: slideIn 0.3s ease-out;
}

.confirm-modal-header {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-bottom: 1rem;
}

.confirm-modal-icon {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: #fee;
    color: #dc3545;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 24px;
    font-weight: bold;
}

.confirm-modal-title {
    font-size: 1.25rem;
    font-weight: 600;
    color: #2d3748;
    margin: 0;
}

.confirm-modal-body {
    color: #64748b;
    font-size: 1rem;
    line-height: 1.5;
    margin-bottom: 1.5rem;
}

.confirm-modal-footer {
    display: flex;
    gap: 0.75rem;
    justify-content: flex-end;
}

.confirm-modal-btn {
    padding: 0.75rem 1.5rem;
    border-radius: 8px;
    font-weight: 600;
    font-size: 0.95rem;
    border: none;
    cursor: pointer;
    transition: all 0.2s ease;
}

.confirm-modal-btn-cancel {
    background: #f1f5f9;
    color: #64748b;
}

.confirm-modal-btn-cancel:hover {
    background: #e2e8f0;
}

.confirm-modal-btn-confirm {
    background: #dc3545;
    color: white;
}

.confirm-modal-btn-confirm:hover {
    background: #c82333;
}

@keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
}

@keyframes slideIn {
    from {
        opacity: 0;
        transform: translateY(-20px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}
</style>

<!-- Confirmation Modal -->
<div id="confirmModal" class="confirm-modal">
    <div class="confirm-modal-content">
        <div class="confirm-modal-header">
            <div class="confirm-modal-icon">!</div>
            <h3 class="confirm-modal-title" id="confirmModalTitle">Delete User</h3>
        </div>
        <div class="confirm-modal-body" id="confirmModalBody">
            Are you sure you want to delete this user?
        </div>
        <div class="confirm-modal-footer">
            <button class="confirm-modal-btn confirm-modal-btn-cancel" id="confirmModalCancel">Cancel</button>
            <button class="confirm-modal-btn confirm-modal-btn-confirm" id="confirmModalConfirm">Delete</button>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const modal = document.getElementById('confirmModal');
    const titleEl = document.getElementById('confirmModalTitle');
    const bodyEl = document.getElementById('confirmModalBody');
    const cancelBtn = document.getElementById('confirmModalCancel');
    const confirmBtn = document.getElementById('confirmModalConfirm');
    
    let pendingDeletion = null;
    
    // Handle delete user buttons
    document.addEventListener('click', function(e) {
        if (e.target.classList.contains('delete-user-btn') || e.target.closest('.delete-user-btn')) {
            const btn = e.target.classList.contains('delete-user-btn') ? e.target : e.target.closest('.delete-user-btn');
            const userId = btn.dataset.userId;
            const userName = btn.dataset.userName;

            // Set modal content
            titleEl.textContent = 'Delete User';
            bodyEl.innerHTML = `Are you sure you want to delete <strong>${userName}</strong>?<br><br><em>This action cannot be undone. The user will be moved to deleted users.</em>`;
            
            // Store pending deletion data
            pendingDeletion = {
                userId: userId,
                userName: userName,
                btn: btn
            };
            
            // Show modal
            modal.classList.add('active');
        }
    });
    
    // Handle modal cancel
    cancelBtn.addEventListener('click', function() {
        modal.classList.remove('active');
        pendingDeletion = null;
    });
    
    // Handle modal confirm
    confirmBtn.addEventListener('click', function() {
        if (!pendingDeletion) return;
        
        const { userId, userName, btn } = pendingDeletion;
        
        // Create hidden form
        const form = document.createElement('form');
        form.method = 'POST';
        form.action = `/admin/users/${userId}/delete`;
        form.style.display = 'none';
        
        // Add CSRF token
        const csrfInput = document.createElement('input');
        csrfInput.type = 'hidden';
        csrfInput.name = '_token';
        csrfInput.value = '{{ csrf_token("delete_user") }}';
        form.appendChild(csrfInput);
        
        // Add to DOM and submit
        document.body.appendChild(form);
        form.submit();
    });
    
    // Close modal on background click
    modal.addEventListener('click', function(e) {
        if (e.target === modal) {
            modal.classList.remove('active');
            pendingDeletion = null;
        }
    });
});
</script>
{% endblock %}
