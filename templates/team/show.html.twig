{% extends 'base.html.twig' %}

{% block title %}{{ team.name }}{% endblock %}

{% block page_title %}{{ team.name }}{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/css/team-management.css') }}">
{% endblock %}

{% block body %}
    <div class="team-show">
        <!-- Team Header -->
        <div class="team-header">
            <div class="team-info">
                <div class="team-title">
                    <h1>{{ team.name }}</h1>
                    <div class="team-color" style="background-color: {{ team.color ?: '#667eea' }}"></div>
                </div>
                {% if team.description %}
                    <p class="team-description">{{ team.description }}</p>
                {% endif %}
                <div class="team-meta">
                    <span class="meta-item">
                        <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                        </svg>
                        Owner: {{ team.owner.getFullName() }}
                    </span>
                    <span class="meta-item">
                        <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M13 6a3 3 0 11-6 0 3 3 0 016 0zM18 8a2 2 0 11-4 0 2 2 0 014 0zM14 15a4 4 0 00-8 0v3h8v-3z"></path>
                        </svg>
                        {{ team.getMemberCount() }} Members
                    </span>
                    <span class="meta-item">
                        <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
                        </svg>
                        Created {{ team.createdAt|date('M d, Y') }}
                    </span>
                </div>
            </div>
            <div class="team-actions">
                {% if isOwner %}
                    <a href="{{ path('app_teams_edit', {'id': team.id}) }}" class="btn btn-secondary">
                        <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                        </svg>
                        Edit Team
                    </a>
                    <a href="{{ path('app_teams_add_member', {'id': team.id}) }}" class="btn btn-primary">
                        <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"></path>
                        </svg>
                        Add Member
                    </a>
                {% else %}
                    <form method="post" action="{{ path('app_teams_leave', {'id': team.id}) }}" style="display: inline;">
                        <input type="hidden" name="_token" value="{{ csrf_token('leave_team') }}">
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure you want to leave this team?')">
                            <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                                <path fill-rule="evenodd" d="M3 3a1 1 0 00-1 1v12a1 1 0 102 0V4a1 1 0 00-1-1zm10.293 9.293a1 1 0 001.414 1.414l3-3a1 1 0 000-1.414l-3-3a1 1 0 10-1.414 1.414L14.586 9H7a1 1 0 100 2h7.586l-1.293 1.293z" clip-rule="evenodd"></path>
                            </svg>
                            Leave Team
                        </button>
                    </form>
                {% endif %}
            </div>
        </div>

        <!-- Team Members -->
        <div class="team-members">
            <div class="section-header">
                <h2>Team Members</h2>
                <p>{{ team.getMemberCount() }} active members</p>
            </div>
            
            <div class="members-grid">
                {% for member in members %}
                <div class="member-card {{ member.isOwner() ? 'owner' : '' }}">
                    <div class="member-avatar">
                        {% if member.user.avatar %}
                            <img src="{{ asset('uploads/avatars/' ~ member.user.avatar) }}" alt="Avatar" class="avatar-image">
                        {% else %}
                            <div class="avatar-placeholder">
                                <svg width="40" height="40" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                                </svg>
                            </div>
                        {% endif %}
                    </div>
                    <div class="member-info">
                        <h4>{{ member.getDisplayName() }}</h4>
                        <p class="member-email">{{ member.getEmail() }}</p>
                        <div class="member-meta">
                            {% if member.isOwner() %}
                                {% set userRole = member.user.getActiveRoles()|first ?: 'ROLE_ADMIN' %}
                                <span class="member-role">{{ userRole|replace({'ROLE_': ''}) }}</span>
                            {% else %}
                                <span class="member-role">{{ member.role ?: 'Member' }}</span>
                            {% endif %}
                            {% if member.isOwner() %}
                                <span class="member-badge owner">Owner</span>
                            {% endif %}
                        </div>
                        <div class="member-joined">
                            Joined {{ member.joinedAt|date('M d, Y') }}
                        </div>
                    </div>
                    {% if isOwner and not member.isOwner() %}
                    <div class="member-actions">
                        <form method="post" action="{{ path('app_teams_remove_member', {'id': team.id, 'memberId': member.id}) }}" 
                              style="display: inline;" 
                              onsubmit="return confirm('Are you sure you want to remove this member?')">
                            <input type="hidden" name="_token" value="{{ csrf_token('remove_member') }}">
                            <button type="submit" class="btn btn-sm btn-danger" title="Remove member">
                                <svg width="14" height="14" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                </svg>
                            </button>
                        </form>
                    </div>
                    {% endif %}
                </div>
                {% endfor %}
            </div>
        </div>

        <!-- Team Actions (Owner Only) -->
        {% if isOwner %}
        <div class="team-actions-section">
            <div class="section-header">
                <h2>Team Management</h2>
                <p>Manage your team settings and members</p>
            </div>
            
            <div class="actions-grid">
                <div class="action-card">
                    <div class="action-icon">
                        <svg width="24" height="24" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
                            <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
                        </svg>
                    </div>
                    <div class="action-content">
                        <h4>Create Invitation</h4>
                        <p>Generate a shareable link to invite new members</p>
                    </div>
                    <div class="action-button">
                        <button type="button" class="btn btn-primary" onclick="openInvitePopup({{ team.id }})">
                            Invite
                        </button>
                    </div>
                </div>
                
                <div class="action-card">
                    <div class="action-icon">
                        <svg width="24" height="24" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <div class="action-content">
                        <h4>Add Members</h4>
                        <p>Add existing users directly to your team</p>
                    </div>
                    <div class="action-button">
                        <a href="{{ path('app_teams_add_member', {'id': team.id}) }}" class="btn btn-secondary">
                            Add Member
                        </a>
                    </div>
                </div>
                
                <div class="action-card">
                    <div class="action-icon">
                        <svg width="24" height="24" fill="currentColor" viewBox="0 0 20 20">
                            <path d="M13.586 3.586a2 2 0 112.828 2.828l-.793.793-2.828-2.828.793-.793zM11.379 5.793L3 14.172V17h2.828l8.38-8.379-2.83-2.828z"></path>
                        </svg>
                    </div>
                    <div class="action-content">
                        <h4>Edit Team</h4>
                        <p>Update team name, description, and settings</p>
                    </div>
                    <div class="action-button">
                        <a href="{{ path('app_teams_edit', {'id': team.id}) }}" class="btn btn-secondary">
                            Edit Team
                        </a>
                    </div>
                </div>
                
                <div class="action-card danger">
                    <div class="action-icon">
                        <svg width="24" height="24" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M9 2a1 1 0 000 2h2a1 1 0 100-2H9z" clip-rule="evenodd"></path>
                            <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
                        </svg>
                    </div>
                    <div class="action-content">
                        <h4>Delete Team</h4>
                        <p>Permanently delete this team and all its data</p>
                    </div>
                    <div class="action-button">
                        <form method="post" action="{{ path('app_teams_delete', {'id': team.id}) }}" 
                              style="display: inline;" 
                              onsubmit="return confirm('Are you sure you want to delete this team? This action cannot be undone.')">
                            <input type="hidden" name="_token" value="{{ csrf_token('delete_team') }}">
                            <button type="submit" class="btn btn-danger">
                                Delete Team
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        {% endif %}
    </div>

    <!-- Invite Popup Modal -->
    <div id="inviteModal" class="modal-overlay" style="display: none;">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Invite to {{ team.name }}</h3>
                <button type="button" class="modal-close" onclick="closeInvitePopup()">&times;</button>
            </div>
            <div class="modal-body">
                <div id="inviteLoading" class="invite-loading" style="display: none;">
                    <div class="loading-spinner"></div>
                    <p>Generating invitation link...</p>
                </div>
                <div id="inviteResult" class="invite-result" style="display: none;">
                    <div class="result-success">
                        <h4>Team Invitation Link</h4>
                        <p>Share this link with your team members. It will expire in 24 hours.</p>
                        <div class="invite-link-container">
                            <input type="text" id="inviteLink" class="form-control" readonly>
                            <button type="button" class="btn btn-secondary" onclick="copyInviteLink()">Copy</button>
                        </div>
                        <div class="invite-info">
                            <p><strong>Role:</strong> Member</p>
                            <p><strong>Expires:</strong> <span id="expiryTime"></span></p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" onclick="closeInvitePopup()">Close</button>
            </div>
        </div>
    </div>

    <script>
        function openInvitePopup(teamId) {
            document.getElementById('inviteModal').style.display = 'flex';
            document.getElementById('inviteResult').style.display = 'none';
            document.getElementById('inviteLoading').style.display = 'block';
            
            // Automatically create invitation
            createInvitation(teamId);
        }

        function closeInvitePopup() {
            document.getElementById('inviteModal').style.display = 'none';
        }

        function createInvitation(teamId) {
            // Create form data with default values
            const formData = new FormData();
            formData.append('email', 'team@invitation.com'); // Generic email for team invitations
            formData.append('role', 'Member'); // Default role
            formData.append('message', 'Team invitation link'); // Default message
            formData.append('_token', '{{ csrf_token('create_invitation') }}');

            // Send AJAX request
            const url = `/teams/${teamId}/create-invitation`;
            console.log('Making request to:', url);
            fetch(url, {
                method: 'POST',
                body: formData,
                credentials: 'same-origin',
                headers: {
                    'X-Requested-With': 'XMLHttpRequest',
                    'Accept': 'application/json'
                }
            })
            .then(response => {
                console.log('Response status:', response.status);
                console.log('Response headers:', response.headers);
                console.log('Content-Type:', response.headers.get('content-type'));
                
                // Check if response is JSON
                const contentType = response.headers.get('content-type');
                if (contentType && contentType.includes('application/json')) {
                    return response.json();
                } else {
                    // If not JSON, get text and log it
                    return response.text().then(text => {
                        console.log('Response text:', text);
                        throw new Error('Expected JSON response but got: ' + contentType);
                    });
                }
            })
            .then(data => {
                console.log('Response data:', data);
                document.getElementById('inviteLoading').style.display = 'none';
                
                if (data.success) {
                    document.getElementById('inviteLink').value = data.invitationUrl;
                    document.getElementById('inviteResult').style.display = 'block';
                    
                    // Set expiry time (24 hours from now)
                    const expiryDate = new Date();
                    expiryDate.setHours(expiryDate.getHours() + 24);
                    document.getElementById('expiryTime').textContent = expiryDate.toLocaleString();
                } else {
                    alert('Error creating invitation: ' + (data.message || 'Unknown error'));
                }
            })
            .catch(error => {
                console.error('Error:', error);
                document.getElementById('inviteLoading').style.display = 'none';
                alert('Error creating invitation: ' + error.message);
            });
        }

        function copyInviteLink() {
            const inviteLink = document.getElementById('inviteLink');
            inviteLink.select();
            inviteLink.setSelectionRange(0, 99999); // For mobile devices
            document.execCommand('copy');
            
            // Show feedback
            const button = event.target;
            const originalText = button.textContent;
            button.textContent = 'Copied!';
            setTimeout(() => {
                button.textContent = originalText;
            }, 2000);
        }

        // Close modal when clicking outside
        document.getElementById('inviteModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeInvitePopup();
            }
        });
    </script>
{% endblock %}
