{% extends 'base.html.twig' %}

{% block title %}Add Member to {{ team.name }}{% endblock %}

{% block page_title %}Add Member to {{ team.name }}{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/css/team-management.css') }}">
{% endblock %}

{% block body %}
    <div class="team-add-member">
        <div class="add-member-header">
            <h1>Add Member</h1>
            <p>Invite a new member to join <strong>{{ team.name }}</strong></p>
        </div>

        <div class="add-member-form">
            {{ form_start(form, {'attr': {'class': 'team-form'}}) }}
            
            <div class="form-section">
                <h3>Member Information</h3>
                
                <div class="form-group">
                    <label for="user-search" class="form-label">Select User</label>
                    <div class="user-search-container">
                        <div class="user-search-input-wrapper">
                            <input type="text" id="user-search" class="form-control" placeholder="Search users..." autocomplete="off">
                            <div class="search-icon">
                                <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
                                </svg>
                            </div>
                        </div>
                        <div class="user-dropdown" id="user-dropdown" style="display: none;">
                            <div class="dropdown-content">
                                <!-- Users will be populated here -->
                            </div>
                        </div>
                    </div>
                    {{ form_widget(form.user, {'attr': {'style': 'display: none;'}}) }}
                    <div class="selected-user-display" id="selected-user-display" style="display: none;">
                        <div class="selected-user-info">
                            <span class="user-name"></span>
                            <span class="user-email"></span>
                            <button type="button" class="remove-selection" onclick="clearUserSelection()">
                                <svg width="14" height="14" fill="currentColor" viewBox="0 0 20 20">
                                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                                </svg>
                            </button>
                        </div>
                    </div>
                    {{ form_errors(form.user) }}
                    <small class="form-text">Search and select a user to add to your team</small>
                </div>
                
                <div class="form-group">
                    {{ form_label(form.role) }}
                    {{ form_widget(form.role) }}
                    {{ form_errors(form.role) }}
                    <small class="form-text">Assign a role to this team member</small>
                </div>
                
                <div class="form-group">
                    {{ form_label(form.notes) }}
                    {{ form_widget(form.notes) }}
                    {{ form_errors(form.notes) }}
                    <small class="form-text">Add any notes about this member (optional)</small>
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">
                    <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"></path>
                    </svg>
                    Add Member
                </button>
                <a href="{{ path('app_teams_show', {'id': team.id}) }}" class="btn btn-secondary">
                    <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"></path>
                    </svg>
                    Cancel
                </a>
            </div>

            {{ form_end(form) }}
        </div>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const searchInput = document.getElementById('user-search');
        const dropdown = document.getElementById('user-dropdown');
        const selectedUserId = document.querySelector('select[name="team_member[user]"]');
        const selectedUserDisplay = document.getElementById('selected-user-display');
        const dropdownContent = dropdown.querySelector('.dropdown-content');
        
        let allUsers = [];
        let filteredUsers = [];
        let selectedUser = null;
        
        // Load users from backend
        async function loadUsers() {
            try {
                console.log('Loading users for team {{ team.id }}');
                const response = await fetch(`/teams/{{ team.id }}/api/users`);
                console.log('Response status:', response.status);
                const data = await response.json();
                console.log('Users data:', data);
                allUsers = data.users || [];
                filteredUsers = [...allUsers];
                console.log('Loaded users:', allUsers.length);
            } catch (error) {
                console.error('Error loading users:', error);
                allUsers = [];
                filteredUsers = [];
            }
        }
        
        // Filter users based on search term
        function filterUsers(searchTerm) {
            console.log('Filtering users with term:', searchTerm);
            if (!searchTerm.trim()) {
                filteredUsers = [...allUsers];
            } else {
                const term = searchTerm.toLowerCase();
                filteredUsers = allUsers.filter(user => 
                    user.firstName.toLowerCase().includes(term) ||
                    user.lastName.toLowerCase().includes(term) ||
                    user.email.toLowerCase().includes(term) ||
                    (user.organization && user.organization.toLowerCase().includes(term))
                );
            }
            console.log('Filtered users:', filteredUsers.length);
            renderUsers();
        }
        
        // Render filtered users in dropdown
        function renderUsers() {
            console.log('Rendering users:', filteredUsers.length);
            dropdownContent.innerHTML = '';
            
            if (filteredUsers.length === 0) {
                dropdownContent.innerHTML = '<div class="no-results">No users found</div>';
                return;
            }
            
            filteredUsers.forEach(user => {
                const userItem = document.createElement('div');
                userItem.className = 'user-item';
                userItem.innerHTML = `
                    <div class="user-info">
                        <div class="user-name">${user.firstName} ${user.lastName}</div>
                        <div class="user-email">${user.email}</div>
                        ${user.organization ? `<div class="user-organization">${user.organization}</div>` : '<div class="user-organization">No Organization</div>'}
                    </div>
                `;
                
                userItem.addEventListener('click', () => selectUser(user));
                dropdownContent.appendChild(userItem);
            });
        }
        
        // Select a user
        function selectUser(user) {
            console.log('Selecting user:', user);
            selectedUser = user;
            selectedUserId.value = user.id;
            console.log('Set selectedUserId value to:', user.id);
            
            // Update display
            selectedUserDisplay.querySelector('.user-name').textContent = `${user.firstName} ${user.lastName}`;
            selectedUserDisplay.querySelector('.user-email').textContent = user.email;
            
            // Show selected user display and hide search
            selectedUserDisplay.style.display = 'block';
            searchInput.style.display = 'none';
            dropdown.style.display = 'none';
            
            // Clear search
            searchInput.value = '';
        }
        
        // Clear user selection
        window.clearUserSelection = function() {
            selectedUser = null;
            selectedUserId.value = '';
            selectedUserDisplay.style.display = 'none';
            searchInput.style.display = 'block';
            searchInput.value = '';
            dropdown.style.display = 'none';
        };
        
        // Event listeners
        searchInput.addEventListener('input', function() {
            const searchTerm = this.value;
            filterUsers(searchTerm);
            dropdown.style.display = searchTerm.length > 0 ? 'block' : 'none';
        });
        
        searchInput.addEventListener('focus', function() {
            if (this.value.length > 0) {
                dropdown.style.display = 'block';
            }
        });
        
        // Close dropdown when clicking outside
        document.addEventListener('click', function(event) {
            if (!event.target.closest('.user-search-container')) {
                dropdown.style.display = 'none';
            }
        });
        
        // Initialize
        loadUsers();
    });
    </script>
{% endblock %}
