{% extends 'base.html.twig' %}

{% block title %}Add Member to {{ team.name }}{% endblock %}

{% block page_title %}Add Member to {{ team.name }}{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/css/team-management.css') }}">
{% endblock %}

{% block body %}
    <div class="team-add-member">
        <div class="add-member-header">
            <h1>Add Member</h1>
            <p>Invite a new member to join <strong>{{ team.name }}</strong></p>
        </div>

        <div class="add-member-form">
            {{ form_start(form, {'attr': {'class': 'team-form'}}) }}
            
            <div class="form-section">
                <h3>Member Information</h3>
                
                <div class="form-group">
                    <label for="userDropdownButton" class="form-label">
                        <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20" style="margin-right: 8px;">
                            <path d="M8 9a3 3 0 100-6 3 3 0 000 6zM15.472 13.472a4 4 0 010 5.656 4 4 0 01-5.656 0l-3.179-3.179c4.686-4.686 4.686-12.284 0-16.97l3.179 3.179a4 4 0 010 5.656z"></path>
                        </svg>
                        Search & Select User
                    </label>
                    <div class="modern-dropdown" style="position: relative; width: 100%;">
                        <button type="button" id="userDropdownButton" class="modern-dropdown-button" 
                                style="width: 100%; padding: 0.75rem 1rem; border: 2px solid #e2e8f0; border-radius: 8px; background: white; color: #374151; font-size: 0.875rem; cursor: pointer; transition: all 0.2s ease; outline: none; display: flex; align-items: center; justify-content: space-between;">
                            <span id="selectedUserText" style="flex: 1; text-align: left; color: #6b7280;">Select a user...</span>
                            <svg class="dropdown-arrow" width="16" height="16" fill="currentColor" viewBox="0 0 20 20" style="transition: transform 0.2s ease; color: #6b7280;">
                                <path fill-rule="evenodd" d="M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z" clip-rule="evenodd"></path>
                            </svg>
                        </button>
                        <div id="userDropdown" class="modern-dropdown-menu" 
                             style="display: none; position: absolute; top: 100%; left: 0; right: 0; background: white; border: 2px solid #e2e8f0; border-radius: 8px; box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1); z-index: 1000; margin-top: 0.25rem; max-height: 300px; overflow: hidden;">
                            <div class="dropdown-search" style="position: relative; padding: 0.75rem; border-bottom: 1px solid #f1f5f9;">
                                <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20" class="search-icon" 
                                     style="position: absolute; left: 1rem; top: 50%; transform: translateY(-50%); color: #9ca3af; pointer-events: none;">
                                    <path fill-rule="evenodd" d="M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z" clip-rule="evenodd"></path>
                                </svg>
                                <input type="text" id="userSearchInput" class="dropdown-search-input" 
                                       style="width: 100%; padding: 0.5rem 1rem 0.5rem 2.5rem; border: 1px solid #e2e8f0; border-radius: 6px; font-size: 0.875rem; background: white; outline: none; transition: border-color 0.2s ease;" 
                                       placeholder="Search users..." autocomplete="off">
                            </div>
                            <div id="userDropdownList" class="dropdown-list" style="max-height: 250px; overflow-y: auto;">
                                <!-- Users will be populated here -->
                            </div>
                        </div>
                        {{ form_widget(form.user, {'attr': {'style': 'display: none;'}}) }}
                    </div>
                    {{ form_errors(form.user) }}
                    <small class="form-text">Search and select a user to add to your team</small>
                </div>
                
                <div class="form-group">
                    {{ form_label(form.role) }}
                    {{ form_widget(form.role) }}
                    {{ form_errors(form.role) }}
                    <small class="form-text">Assign a role to this team member (Current Role = keep user's existing role)</small>
                </div>
                
                <div class="form-group">
                    {{ form_label(form.notes) }}
                    {{ form_widget(form.notes) }}
                    {{ form_errors(form.notes) }}
                    <small class="form-text">Add any notes about this member (optional)</small>
                </div>
            </div>

            <div class="form-actions">
                <button type="submit" class="btn btn-primary">
                    <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"></path>
                    </svg>
                    Add Member
                </button>
                <a href="{{ path('app_teams_show', {'id': team.id}) }}" class="btn btn-secondary">
                    <svg width="16" height="16" fill="currentColor" viewBox="0 0 20 20">
                        <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd"></path>
                    </svg>
                    Cancel
                </a>
            </div>

            {{ form_end(form) }}
        </div>
    </div>

    <script>
    let allUsers = [];

    /**
     * Load users from API
     */
    async function loadAllUsers() {
        try {
            const response = await fetch(`/teams/{{ team.id }}/api/users`);
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            const data = await response.json();
            allUsers = data.users || [];
        } catch (error) {
            console.error('Error loading users:', error);
            allUsers = [];
        }
    }

    /**
     * Initialize modern dropdown functionality
     */
    function initUserSearchDropdown() {
        const dropdownButton = document.getElementById('userDropdownButton');
        const dropdownMenu = document.getElementById('userDropdown');
        const searchInput = document.getElementById('userSearchInput');
        const userDropdownList = document.getElementById('userDropdownList');
        const selectedUserText = document.getElementById('selectedUserText');
        const formSelect = document.querySelector('select[name="team_member[user]"]');
        
        if (!dropdownButton || !dropdownMenu) return;
        
        // Load all users on page load
        loadAllUsers();
        
        // Show/hide dropdown
        dropdownButton.addEventListener('click', function(e) {
            e.stopPropagation();
            toggleDropdown();
        });
        
        // Search functionality
        searchInput.addEventListener('input', function() {
            const query = this.value.trim().toLowerCase();
            filterUsers(query);
        });
        
        // Handle user selection
        userDropdownList.addEventListener('click', function(e) {
            const userOption = e.target.closest('.user-option');
            if (userOption) {
                const userId = userOption.dataset.value;
                const userName = userOption.dataset.name;
                const userEmail = userOption.dataset.email;
                
                selectUser(userId, userName, userEmail);
                closeDropdown();
            }
        });
        
        // Close dropdown when clicking outside
        document.addEventListener('click', function(e) {
            if (!e.target.closest('.modern-dropdown')) {
                closeDropdown();
            }
        });
        
        // Focus search input when dropdown opens
        function toggleDropdown() {
            if (dropdownMenu.style.display === 'none' || dropdownMenu.style.display === '') {
                dropdownMenu.style.display = 'block';
                populateUsers(); // Show all users initially
                setTimeout(() => searchInput.focus(), 100);
            } else {
                closeDropdown();
            }
        }
        
        function closeDropdown() {
            dropdownMenu.style.display = 'none';
            searchInput.value = ''; // Clear search
        }
        
        // Populate users in dropdown
        function populateUsers() {
            userDropdownList.innerHTML = allUsers.map(user => 
                `<div class="user-option" data-value="${user.id}" data-name="${user.firstName} ${user.lastName}" data-email="${user.email}" data-role="${user.role || 'N/A'}" 
                     style="display: flex; align-items: center; justify-content: space-between; padding: 0.75rem 1rem; cursor: pointer; transition: background-color 0.2s ease; border-bottom: 1px solid #f1f5f9;"
                     onmouseover="this.style.backgroundColor='#f8fafc'" 
                     onmouseout="this.style.backgroundColor='white'">
                    <div class="user-option-content" style="flex: 1;">
                        <div class="user-option-name" style="font-weight: 600; color: #1e293b; font-size: 0.875rem; margin-bottom: 0.125rem;">${user.firstName} ${user.lastName}</div>
                        <div class="user-option-email" style="color: #64748b; font-size: 0.75rem;">${user.email}</div>
                        ${user.organization ? `<div class="user-option-org" style="color: #9ca3af; font-size: 0.7rem; font-style: italic;">${user.organization}</div>` : '<div class="user-option-org" style="color: #9ca3af; font-size: 0.7rem; font-style: italic;">No Organization</div>'}
                    </div>
                </div>`
            ).join('');
        }
        
        // Filter users based on search query
        function filterUsers(query) {
            const filteredUsers = allUsers.filter(user => {
                if (!query) return true;
                
                const fullName = `${user.firstName} ${user.lastName}`.toLowerCase();
                const email = user.email.toLowerCase();
                const organization = user.organization ? user.organization.toLowerCase() : '';
                
                return fullName.includes(query) || email.includes(query) || organization.includes(query);
            });
            
            userDropdownList.innerHTML = filteredUsers.map(user => 
                `<div class="user-option" data-value="${user.id}" data-name="${user.firstName} ${user.lastName}" data-email="${user.email}" data-role="${user.role || 'N/A'}" 
                     style="display: flex; align-items: center; justify-content: space-between; padding: 0.75rem 1rem; cursor: pointer; transition: background-color 0.2s ease; border-bottom: 1px solid #f1f5f9;"
                     onmouseover="this.style.backgroundColor='#f8fafc'" 
                     onmouseout="this.style.backgroundColor='white'">
                    <div class="user-option-content" style="flex: 1;">
                        <div class="user-option-name" style="font-weight: 600; color: #1e293b; font-size: 0.875rem; margin-bottom: 0.125rem;">${user.firstName} ${user.lastName}</div>
                        <div class="user-option-email" style="color: #64748b; font-size: 0.75rem;">${user.email}</div>
                        ${user.organization ? `<div class="user-option-org" style="color: #9ca3af; font-size: 0.7rem; font-style: italic;">${user.organization}</div>` : '<div class="user-option-org" style="color: #9ca3af; font-size: 0.7rem; font-style: italic;">No Organization</div>'}
                    </div>
                </div>`
            ).join('');
        }
        
        // Select user
        function selectUser(userId, userName, userEmail) {
            selectedUserText.textContent = userName;
            selectedUserText.style.color = '#1e293b';
            
            // Set form value
            if (formSelect) {
                formSelect.value = userId;
            }
        }
    }

    // Initialize when DOM is loaded
    document.addEventListener('DOMContentLoaded', function() {
        initUserSearchDropdown();
    });
    </script>
{% endblock %}
