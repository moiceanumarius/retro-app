{% extends 'base.html.twig' %}

{% block title %}Action Management{% endblock %}

{% block page_title %}Action Management{% endblock %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/css/retrospective.css') }}">
    <style>
    .dashboard-container {
        min-height: 100vh;
        width: 100%;
        background: #f8fafc;
        padding: 2rem;
    }

    .actions-management {
        max-width: 1400px;
        margin: 0 auto;
        background: white;
        border-radius: 16px;
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
        overflow: hidden;
    }

    .page-header {
        background: #374151;
        color: white;
        padding: 2rem;
        text-align: center;
    }

    .page-header h1 {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 0 0 0.5rem 0;
    }

    .page-header p {
        font-size: 1.125rem;
        opacity: 0.9;
        margin: 0;
    }

    .stats-section {
        display: flex;
        gap: 1rem;
        padding: 1.5rem 2rem;
        background: #f8fafc;
        border-bottom: 1px solid #e2e8f0;
        justify-content: center;
    }

    .stat-item {
        text-align: center;
        padding: 1rem 1.5rem;
        background: white;
        border-radius: 12px;
        min-width: 120px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
        border: 1px solid #e2e8f0;
    }

    .stat-number {
        display: block;
        font-size: 2rem;
        font-weight: bold;
        color: #4f46e5;
        margin-bottom: 0.25rem;
    }

    .stat-label {
        Font-size: 0.75rem;
        Color: #64748b;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        font-weight: 600;
    }

    .filters-section {
        padding: 2rem;
        background: white;
        border-bottom: 1px solid #e2e8f0;
    }

    .filters-grid {
        display: grid;
        grid-template-columns: auto auto 2fr auto;
        gap: 1rem;
        align-items: center;
    }

    .search-box {
        padding: 0.875rem 1rem;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        font-size: 0.875rem;
        width: 100%;
        margin-right: 1rem;
    }

    .search-box:focus {
        outline: none;
        border-color: #4f46e5;
        box-shadow: 0 0 0 3px rgba(79, 70, 229, 0.1);
    }

    .filter-dropdown {
        padding: 0.75rem 0.75rem;
        border: 2px solid #e2e8f0;
        border-radius: 8px;
        background: white;
        font-size: 0.875rem;
        min-width: 120px;
        max-width: 140px;
    }

    .filter-dropdown:focus {
        outline: none;
        border-color: #4f46e5;
    }

    .clear-filters-btn {
        padding: 0.875rem 1.5rem;
        background: #6b7280;
        color: white;
        border: none;
        border-radius: 8px;
        font-size: 0.875rem;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.2s;
    }

    .clear-filters-btn:hover {
        background: #4b5563;
        transform: translateY(-1px);
    }

    .table-container {
        overflow-x: auto;
        padding: 0;
    }

    .actions-table {
        width: 100%;
        border-collapse: collapse;
        background: white;
    }

    .actions-table thead th {
        background: #f8fafc;
        padding: 1rem;
        text-align: left;
        font-weight: 600;
        color: #374151;
        border-bottom: 2px solid #e2e8f0;
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

    .actions-table tbody tr {
        border-bottom: 1px solid #f1f5f9;
        transition: background-color 0.2s;
    }

    .actions-table tbody tr:hover {
        background: #f8fafc;
    }

    .actions-table tbody td {
        padding: 1rem;
        vertical-align: middle;
        font-size: 0.875rem;
    }

    .status-badge {
        padding: 0.375rem 0.75rem;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: uppercase;
        letter-spacing: 0.05em;
        display: inline-block;
    }

    .status-badge.pending {
        background: #fef3c7;
        color: #92400e;
    }

    .status-badge.in_progress {
        background: #dbeafe;
        color: #1e40af;
    }

    .status-badge.completed {
        background: #dcfce7;
        color: #166534;
    }

    .status-badge.cancelled {
        background: #f3f4f6;
        color: #374151;
    }

    .action-description {
        font-weight: 500;
        color: #1f2937;
        max-width: 300px;
        line-height: 1.5;
    }

    .assignee-info {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #6b7280;
    }

    .assignee-avatar {
        width: 32px;
        height: 32px;
        border-radius: 50%;
        background: #4f46e5;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 0.75rem;
        font-weight: 600;
    }

    .due-date {
        color: #6b7280;
        font-size: 0.875rem;
    }

    .due-date.overdue {
        color: #dc2626;
        font-weight: 600;
    }

    .retrospective-link {
        color: #4f46e5;
        text-decoration: none;
        font-weight: 500;
        font-size: 0.875rem;
    }

    .retrospective-link:hover {
        text-decoration: underline;
    }

    .status-controls {
        display: flex;
        gap: 0.5rem;
        align-items: center;
    }

    .status-select {
        padding: 0.5rem 0.75rem;
        border: 1px solid #d1d5db;
        border-radius: 6px;
        background: white;
        font-size: 0.875rem;
        color: #374151;
        cursor: pointer;
        min-width: 110px;
        max-width: 130px;
    }

    .status-select:hover,
    .status-select:focus {
        border-color: #4f46e5;
        outline: none;
    }

    .no-actions {
        text-align: center;
        padding: 4rem 2rem;
        color: #6b7280;
        background: white;
    }

    .no-actions-icon {
        opacity: 0.3;
        margin-bottom: 2rem;
        color: #9ca3af;
    }

    .no-actions h3 {
        margin: 0 0 1rem 0;
        color: #374151;
        font-size: 1.5rem;
        font-weight: 600;
    }

    .no-actions p {
        margin: 0;
        font-size: 1rem;
        color: #6b7280;
        line-height: 1.6;
    }

    @media (max-width: 1024px) {
        .filters-grid {
            grid-template-columns: 1fr;
            gap: 1rem;
        }
        
        .stats-section {
            flex-wrap: wrap;
            justify-content: center;
        }
        
        .action-description {
            max-width: 250px;
        }
    }

    @media (max-width: 768px) {
        .dashboard-container {
            padding: 1rem;
        }
        
        .actions-management {
            border-radius: 12px;
        }
        
        .page-header {
            padding: 1.5rem;
        }
        
        .page-header h1 {
            font-size: 2rem;
        }
        
        .stats-section {
            padding: 1rem;
            gap: 0.75rem;
        }
        
        .stat-item {
            min-width: 100px;
            padding: 0.75rem 1rem;
        }
        
        .stat-number {
            font-size: 1.75rem;
        }
        
        .filters-section {
            padding: 1.5rem;
        }
        
        .actions-table th,
        .actions-table td {
            padding: 0.75rem 0.5rem;
        }
        
        .action-description {
            max-width: 200px;
            font-size: 0.8rem;
        }
        
        .assignee-info {
            flex-direction: column;
            gap: 0.25rem;
            text-align: center;
        }
        
        .assignee-avatar {
            width: 28px;
            height: 28px;
            font-size: 0.7rem;
        }
    }

    @media (max-width: 640px) {
        .actions-table {
            font-size: 0.75rem;
        }
        
        .actions-table th,
        .actions-table td {
            padding: 0.5rem 0.25rem;
        }
        
        .status-badge {
            padding: 0.25rem 0.5rem;
            font-size: 0.625rem;
        }
        
        .status-select {
            min-width: 90px;
            max-width: 110px;
            font-size: 0.75rem;
        }
    }
    </style>
{% endblock %}

{% block body %}
<div class="dashboard-container">
    <div class="actions-management">
        <!-- Page Header -->
        <div class="page-header">
            <h1>Action Management</h1>
            <p>Manage and track action items from retrospectives</p>
        </div>

        <!-- Statistics Section -->
        <div class="stats-section">
            <div class="stat-item">
                <span class="stat-number">{{ actions|length }}</span>
                <span class="stat-label">Total</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">{{ groupedActions.pending|length }}</span>
                <span class="stat-label">Pending</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">{{ groupedActions.in_progress|length }}</span>
                <span class="stat-label">In Progress</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">{{ groupedActions.completed|length }}</span>
                <span class="stat-label">Completed</span>
            </div>
            <div class="stat-item">
                <span class="stat-number">{{ groupedActions.cancelled|length }}</span>
                <span class="stat-label">Cancelled</span>
            </div>
        </div>

        <!-- Filters Section -->
        <div class="filters-section">
            <div class="filters-grid">
                <label for="statusFilter" style="font-weight: 600; color: #374151;">Status:</label>
                <select id="statusFilter" class="filter-dropdown">
                    <option value="all">All Actions</option>
                    <option value="pending">Pending</option>
                    <option value="in_progress">In Progress</option>
                    <option value="completed">Completed</option>
                    <option value="cancelled">Cancelled</option>
                </select>
                
                <input type="text" id="searchBox" class="search-box" placeholder="Search by description or retrospective...">
                
                <button type="button" class="clear-filters-btn" onclick="clearFilters()">Clear All</button>
            </div>
        </div>

        <!-- Actions Table -->
        <div class="table-container">
            {% if actions|length > 0 %}
                <table class="actions-table">
                    <thead>
                        <tr>
                            <th>Action</th>
                            <th>Status</th>
                            <th>Assignee</th>
                            <th>Due Date</th>
                            <th>Retrospective</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% for action in actions %}
                            <tr data-status="{{ action.status }}" data-description="{{ action.description|lower }}" data-retrospective="{{ action.retrospective.title|lower }}">
                                <td>
                                    <div class="action-description">{{ action.description }}</div>
                                </td>
                                <td>
                                    <span class="status-badge {{ action.status }}">{{ action.status }}</span>
                                </td>
                                <td>
                                    {% if action.assignedTo %}
                                        <div class="assignee-info">
                                            <div class="assignee-avatar">{{ action.assignedTo.firstName|first }}{{ action.assignedTo.lastName|first }}</div>
                                            <span>{{ action.assignedTo.firstName }} {{ action.assignedTo.lastName }}</span>
                                        </div>
                                    {% else %}
                                        <span style="color: #9ca3af; font-style: italic;">Unassigned</span>
                                    {% endif %}  
                                </td>
                                <td>
                                    {% if action.dueDate %}
                                        {% set isOverdue = action.dueDate|date('U') < 'now'|date('U') and action.status not in ['completed', 'cancelled'] %}
                                        <span class="due-date {% if isOverdue %}overdue{% endif %}">
                                            {{ action.dueDate|date('M d, Y') }}
                                        </span>
                                    {% else %}
                                        <span style="color: #9ca3af; font-style: italic;">No due date</span>
                                    {% endif %}
                                </td>
                                <td>
                                    <a href="{{ path('app_retrospectives_show', {id: action.retrospective.id}) }}" class="retrospective-link">
                                        {{ action.retrospective.title }}
                                    </a>
                                </td>
                                <td>
                                    {% if action.assignedTo == app.user or app.user.hasAnyRole(['ROLE_ADMIN', 'ROLE_TEAM_LEAD', 'ROLE_FACILITATOR']) %}
                                        <div class="status-controls">
                                            <select class="status-select" data-action-id="{{ action.id }}">
                                                <option value="pending" {% if action.status == 'pending' %}selected{% endif %}>Pending</option>
                                                <option value="in_progress" {% if action.status == 'in_progress' %}selected{% endif %}>In Progress</option>
                                                <option value="completed" {% if action.status == 'completed' %}selected{% endif %}>Completed</option>
                                                <option value="cancelled" {% if action.status == 'cancelled' %}selected{% endif %}>Cancelled</option>
                                            </select>
                                        </div>
                                    {% endif %}
                                </td>
                            </tr>
                        {% endfor %}
                    </tbody>
                </table>
            {% else %}
                <div class="no-actions">
                    <div class="no-actions-icon">
                        <svg width="64" height="64" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z"/>
                        </svg>
                    </div>
                    <h3>No Actions Found</h3>
                    <p>You don't have any action items yet. Actions are created during retrospectives.</p>
                </div>
            {% endif %}
        </div>
    </div>
</div>
{% endblock %}

{% block javascripts %}
<script>
document.addEventListener('DOMContentLoaded', function() {
    // Get filter elements
    const statusFilter = document.getElementById('statusFilter');
    const searchBox = document.getElementById('searchBox');
    const tableRows = document.querySelectorAll('.actions-table tbody tr');
    
    // Debug: Check if elements are found
    console.log('');
    

    // Status filter functionality
    if (statusFilter) {
        statusFilter.addEventListener('change', function() {
            console.log('Status changed:', this.value);
            filterTable();
        });
    }
    
    // Search functionality
    if (searchBox) {
        searchBox.addEventListener('input', function() {
            console.log('Search input:', this.value);
            filterTable();
        });
    }
    
    // Filter table based on status and search
    function filterTable() {
        if (!statusFilter || !searchBox) {
            console.log('Missing filter elements');
            return;
        }
        
        const statusValue = statusFilter.value;
        const searchValue = searchBox.value.toLowerCase().trim();
        
        console.log('Filtering - Status:', statusValue, 'Search:', searchValue);
        console.log('Total rows:', tableRows.length);
        
        let visibleCount = 0;
        
        tableRows.forEach((row, index) => {
            const rowStatus = row.dataset.status;
            const description = row.dataset.description || '';
            const retrospective = row.dataset.retrospective || '';
            
            // Status filter
            let statusMatch = true;
            if (statusValue !== 'all') {
                statusMatch = rowStatus === statusValue;
            }
            
            // Search filter
            let searchMatch = true;
            if (searchValue.length > 0) {
                const descMatch = description.includes(searchValue);
                const retroMatch = retrospective.includes(searchValue);
                searchMatch = descMatch || retroMatch;
                
                if (index === 0) { // Debug first row
                    console.log('First row debug:', {
                        description: description,
                        retrospective: retrospective,
                        searchValue: searchValue,
                        descMatch: descMatch,
                        retroMatch: retroMatch,
                        searchMatch: searchMatch
                    });
                }
            }
            
            // Show/hide row
            if (statusMatch && searchMatch) {
                row.style.display = '';
                visibleCount++;
            } else {
                row.style.display = 'none';
            }
        });
        
        console.log('Visible rows after filtering:', visibleCount);
    }
    
    // Clear filters functionality
    window.clearFilters = function() {
        if (statusFilter) statusFilter.value = 'all';
        if (searchBox) searchBox.value = '';
        filterTable();
    };
    
    // Initialize filtering on page load
    setTimeout(filterTable, 100);

    // Status update functionality
    const statusSelects = document.querySelectorAll('.status-select');
    
    statusSelects.forEach(select => {
        select.addEventListener('change', function() {
            const actionId = this.dataset.actionId;
            const newStatus = this.value;
            
            fetch(`/actions/${actionId}/update-status`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'X-Requested-With': 'XMLHttpRequest'
                },
                body: JSON.stringify({ status: newStatus }),
                credentials: 'include'
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update UI
                    const actionCard = document.querySelector(`[data-action-id="${actionId}"]`);
                    actionCard.classList.remove('pending', 'in_progress', 'completed', 'cancelled');
                    actionCard.classList.add(newStatus);
                    actionCard.dataset.status = newStatus;
                    
                    // Update status badge
                    const statusBadge = actionCard.querySelector('.action-status-badge');
                    statusBadge.textContent = newStatus.charAt(0).toUpperCase() + newStatus.slice(1);
                    statusBadge.classList.remove('pending', 'in_progress', 'completed', 'cancelled');
                    statusBadge.classList.add(newStatus);
                    
                    // Show success message
                    showMessage('Action status updated successfully!', 'success');
                } else {
                    showMessage(data.message || 'Failed to update action status', 'error');
                }
            })
            .catch(error => {
                console.error('Error updating action status:', error);
                showMessage('Failed to update action status', 'error');
            });
        });
    });
    
    function showMessage(message, type) {
        // Remove any existing messages
        document.querySelectorAll('.action-message').forEach(msg => msg.remove());
        
        // Create message element
        const messageEl = document.createElement('div');
        messageEl.className = `action-message ${type}`;
        messageEl.textContent = message;
        messageEl.style.cssText = `
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 1.5rem;
            border-radius: 8px;
            font-weight: 600;
            z-index: 1000;
            color: white;
            background: ${type === 'success' ? '#10b981' : '#ef4444'};
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
            font-size: 0.875rem;
        `;
        
        document.body.appendChild(messageEl);
        
        // Auto remove after 3 seconds
        setTimeout(() => {
            messageEl.remove();
        }, 3000);
    }
});
</script>
{% endblock %}
